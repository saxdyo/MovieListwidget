name: TMDB 标题海报热门爬取

on:
  schedule:
    # 每15分钟运行一次
    - cron: "*/15 * * * *"
  workflow_dispatch:
    inputs:
      force_update:
        description: '强制更新数据'
        required: false
        default: 'false'
        type: boolean

permissions:
  contents: write
  
env:
  TZ: Asia/Shanghai

jobs:
  crawl-tmdb-data:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🚀 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 🐍 Setup Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
          
      - name: 📦 Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: 🔧 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: 🎬 Run TMDB Crawler
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
        run: |
          echo "🔍 开始运行 TMDB 标题海报热门爬取..."
          echo "⏰ 当前时间: $(date '+%Y-%m-%d %H:%M:%S')"
          python scripts/get_tmdb_data.py
          echo "✅ TMDB 数据爬取完成"
          
      - name: 📊 Check Data Changes
        id: check_changes
        run: |
          if git diff --quiet -- data/TMDB_Trending.json; then
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            echo "ℹ️ 未检测到数据文件变化"
          else
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "📈 检测到数据文件变化"
            # 显示变化的统计信息
            echo "变化的文件:"
            git diff --name-only -- data/TMDB_Trending.json
            echo "文件大小:"
            ls -lh data/TMDB_Trending.json
          fi
          
      - name: ⚙️ Configure Git
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          git config --global user.name "TMDB Crawler Bot"
          git config --global user.email "tmdb-crawler@github-actions.bot"
          git config --global push.default simple
          
      - name: 📤 Commit and Push Changes
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          # 设置时间戳
          TIMESTAMP=$(date '+%Y-%m-%d_%H:%M:%S')
          
          # 添加更改
          git add data/TMDB_Trending.json
          
          # 提交更改
          git commit -m "🎬 Auto-update TMDB trending data: ${TIMESTAMP}
          
          📊 Data updated:
          - 今日全球热门 (Today Global Trending)
          - 本周全球热门 (Weekly Global Trending)  
          - 热门电影 (Popular Movies)
          - 标题背景图 (Title Backdrop Images)
          
          🤖 Generated by TMDB Crawler Bot"
          
          # 推送更改（带重试机制）
          for i in {1..5}; do
            echo "🚀 尝试推送更改 (第 $i 次)..."
            
            # 先拉取最新更改
            if git pull --rebase origin main; then
              echo "✅ 成功同步远程更改"
            else
              echo "⚠️ 同步远程更改失败，尝试重置..."
              git rebase --abort 2>/dev/null || true
              git reset --hard HEAD~1
              git pull origin main
              git add data/TMDB_Trending.json
              git commit -m "🎬 Auto-update TMDB trending data: ${TIMESTAMP}"
            fi
            
            # 推送更改
            if git push origin main; then
              echo "🎉 数据文件已成功更新并推送到远程仓库"
              break
            else
              echo "❌ 推送失败"
              if [ $i -eq 5 ]; then
                echo "🚨 所有推送尝试都失败了"
                exit 1
              else
                echo "⏳ 等待 $((i * 3)) 秒后重试..."
                sleep $((i * 3))
              fi
            fi
          done
          
      - name: 📝 Generate Summary
        if: always()
        run: |
          echo "## 🎬 TMDB 爬取任务总结" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**⏰ 执行时间:** $(date '+%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_STEP_SUMMARY
          echo "**🔄 触发方式:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.check_changes.outputs.changes_detected }}" == "true" ]]; then
            echo "**✅ 状态:** 数据已更新" >> $GITHUB_STEP_SUMMARY
            echo "**📊 更新内容:**" >> $GITHUB_STEP_SUMMARY
            echo "- 今日全球热门数据" >> $GITHUB_STEP_SUMMARY
            echo "- 本周全球热门数据" >> $GITHUB_STEP_SUMMARY
            echo "- 热门电影数据" >> $GITHUB_STEP_SUMMARY
            echo "- 标题背景图URL" >> $GITHUB_STEP_SUMMARY
          else
            echo "**ℹ️ 状态:** 无数据变化" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**📁 数据文件:** \`data/TMDB_Trending.json\`" >> $GITHUB_STEP_SUMMARY
          
      - name: 🚨 Notify on Failure
        if: failure()
        run: |
          echo "❌ TMDB 数据爬取任务失败"
          echo "请检查以下项目:"
          echo "1. TMDB API 密钥是否正确设置"
          echo "2. 网络连接是否正常"
          echo "3. API 限制是否达到"
          echo "4. 脚本逻辑是否有误"