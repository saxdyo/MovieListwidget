name: TMDB_Trending_Optimized
on:
  schedule:
    - cron: "*/15 * * * *"  # 每15分钟执行一次
  workflow_dispatch:  # 支持手动触发
  push:
    branches: [ main ]
    paths:
      - 'scripts/get_tmdb_data_optimized.js'
      - '.github/workflows/tmdb-trending.yml'

permissions:
  contents: write

jobs:
  run-optimized-script:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # 设置超时时间
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'
          
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: |
          npm ci --only=production
          
      - name: Run optimized TMDB script
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          NODE_ENV: production
        run: |
          echo "🚀 开始运行优化的TMDB数据获取脚本..."
          node scripts/get_tmdb_data_optimized.js
          echo "✅ 优化的TMDB脚本运行完成"
          
      - name: Check for changes in JSON file
        id: check_changes
        run: |
          if ! git diff --quiet -- data/TMDB_Trending.json; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "📊 检测到数据文件变化"
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            echo "ℹ️ 未检测到数据文件变化"
          fi
          
      - name: Configure Git
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          
      - name: Commit and push changes with retry
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          git add data/TMDB_Trending.json
          git commit -m "🤖 Auto-update: $(TZ=Asia/Shanghai date +%Y-%m-%d_%H:%M:%S) - 优化脚本更新"
          
          # 重试机制
          for i in {1..3}; do
            echo "🔄 尝试推送 (第 $i 次)..."
            
            # 先同步远程更改
            if git pull origin main --rebase --autostash; then
              echo "✅ 成功同步远程更改"
            else
              echo "⚠️ 同步远程更改失败，尝试重置..."
              git rebase --abort 2>/dev/null || true
              git reset --hard HEAD~1
              git pull origin main
              git add data/TMDB_Trending.json
              git commit -m "🤖 Auto-update: $(TZ=Asia/Shanghai date +%Y-%m-%d_%H:%M:%S) - 优化脚本更新"
            fi
            
            # 推送更改
            if git push origin main; then
              echo "🎉 数据文件已成功更新并推送"
              break
            else
              echo "❌ 推送失败"
              if [ $i -eq 3 ]; then
                echo "🚨 所有推送尝试都失败了"
                exit 1
              else
                echo "⏳ 等待 5 秒后重试..."
                sleep 5
              fi
            fi
          done
          
      - name: Notify if no changes
        if: steps.check_changes.outputs.changes_detected == 'false'
        run: |
          echo "ℹ️ 未检测到数据文件变化，跳过提交"
          echo "📈 数据可能仍然是最新的"
          
      - name: Performance summary
        if: always()
        run: |
          echo "📊 执行总结:"
          echo "- 脚本: 优化的JavaScript版本"
          echo "- 执行时间: $(date)"
          echo "- 数据变化: ${{ steps.check_changes.outputs.changes_detected }}"
          echo "- 缓存优化: 启用"
          echo "- 并发处理: 启用"